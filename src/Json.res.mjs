// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Js_option from "@rescript/runtime/lib/es6/Js_option.js";
import * as Stdlib_JsExn from "@rescript/runtime/lib/es6/Stdlib_JsExn.js";
import * as Primitive_exceptions from "@rescript/runtime/lib/es6/Primitive_exceptions.js";
import * as Json_Decode$JsonCombinators from "./Json_Decode.res.mjs";

let ParseError = /* @__PURE__ */Primitive_exceptions.create("Json-JsonCombinators.ParseError");

function parse(str) {
  try {
    return {
      TAG: "Ok",
      _0: JSON.parse(str)
    };
  } catch (raw_exn) {
    let exn = Primitive_exceptions.internalToException(raw_exn);
    if (exn.RE_EXN_ID === "JsExn") {
      return {
        TAG: "Error",
        _0: Js_option.getWithDefault("Unknown error", Stdlib_JsExn.message(exn._1))
      };
    }
    throw exn;
  }
}

function parseExn(str) {
  try {
    return JSON.parse(str);
  } catch (raw_exn) {
    let exn = Primitive_exceptions.internalToException(raw_exn);
    if (exn.RE_EXN_ID === "JsExn") {
      throw {
        RE_EXN_ID: ParseError,
        _1: Js_option.getWithDefault("Unknown error", Stdlib_JsExn.message(exn._1)),
        Error: new Error()
      };
    }
    throw exn;
  }
}

let Encode;

let Decode;

let decode = Json_Decode$JsonCombinators.decode;

export {
  Encode,
  Decode,
  ParseError,
  decode,
  parse,
  parseExn,
}
/* Stdlib_JsExn Not a pure module */
