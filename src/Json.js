// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

let Js_option = require("rescript/lib/js/Js_option.js");
let Stdlib_Exn = require("rescript/lib/js/Stdlib_Exn.js");
let Primitive_exceptions = require("rescript/lib/js/Primitive_exceptions.js");
let Json_Decode$JsonCombinators = require("./Json_Decode.js");

let ParseError = /* @__PURE__ */Primitive_exceptions.create("Json-JsonCombinators.ParseError");

function parse(str) {
  try {
    return {
      TAG: "Ok",
      _0: JSON.parse(str)
    };
  } catch (raw_ex) {
    let ex = Primitive_exceptions.internalToException(raw_ex);
    if (ex.RE_EXN_ID === Stdlib_Exn.$$Error) {
      return {
        TAG: "Error",
        _0: Js_option.getWithDefault("Unknown error", ex._1.message)
      };
    }
    throw ex;
  }
}

function parseExn(str) {
  try {
    return JSON.parse(str);
  } catch (raw_ex) {
    let ex = Primitive_exceptions.internalToException(raw_ex);
    if (ex.RE_EXN_ID === Stdlib_Exn.$$Error) {
      throw {
        RE_EXN_ID: ParseError,
        _1: Js_option.getWithDefault("Unknown error", ex._1.message),
        Error: new Error()
      };
    }
    throw ex;
  }
}

let Encode;

let Decode;

let decode = Json_Decode$JsonCombinators.decode;

exports.Encode = Encode;
exports.Decode = Decode;
exports.ParseError = ParseError;
exports.decode = decode;
exports.parse = parse;
exports.parseExn = parseExn;
/* No side effect */
